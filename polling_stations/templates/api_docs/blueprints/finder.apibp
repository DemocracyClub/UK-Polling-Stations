## Group Polling Station Finder

The `/postcode` and `/address` endpoints find a user's polling station based on their home address.
This allows you to leverage Democracy Club's data to integrate a polling station finder into your website or app.

A `200 OK` response from `/postcode` or `/address` is an object containing the following top-level keys:
* `polling_station_known`: (boolean) - Do we know where this user should vote?
* `postcode_location`: (object, nullable) - A [GeoJSON Feature](https://tools.ietf.org/html/rfc7946#section-3.2)
  containing a [Point object](https://tools.ietf.org/html/rfc7946#section-3.1.2) describing the centroid of the input postcode.
* `polling_station`: (object, nullable) - A GeoJSON [polling station feature](#polling-stations-geojson-3)
* `addresses`: (array) - An array of address objects listing the addresses applicable to this request (if necessary).
* `council`: (object, nullable) - A [Council](#councils-json-3) object describing the local authority which covers this postcode.
  If we do not know the user's polling station, this can be used to provide contact info for their local council.
  Council may be `null` if we are not able to determine the user's council.
* `custom_finder`: (string, nullable) - If we don't know a user's polling station,
  sometimes we can provide the URL of a polling station finder provided by their local council.
* `report_problem_url`: (string, nullable) - If we provide a polling station result,
  this URL may be used to provide a user with a back-channel to report inaccurate data.
* `metadata`: (object, nullable) - This field may be used to supply additional information about
  an election, particularly if there is some unusual condition or event for voters to be aware of.
* `ballots`: (array) - An array of ballot objects listing the elections applicable to this request.
  It is possible for more than one ballot to occur on the same date.
  For example, a user may vote in a local council election and mayoral election on the same day.
  If `ballots` is an empty array `[]`, there are no upcoming elections in this area.

The entry point to a polling station search is a call to the `/postcode` endpoint.
A valid postcode search may result in one of 3 outcomes:
* <a href="#postcode-search-result-found-3">Result found</a>: We hold data for this area and all voters with this postcode vote at the same polling station.
* <a href="#postcode-search-address-picker-3">Address picker</a>: We hold data for this area but voters with this postcode don't all vote at the same polling station.
  To find the user's polling station, we must make a second API call to the <a href="#address-search-3">`/address` endpoint</a>.
* <a href="#postcode-search-result-not-found-3">Result not Found</a>: We do not hold data for this area.

## Postcode search: Result found [/postcode/{postcode}.json]

When we hold data for this area and all voters with this postcode vote at the same polling station,
the following conditions can be observed in the response body:
* `polling_station_known` is `true`
* `polling_station` is a GeoJSON [polling station feature](#polling-stations-geojson-3)
* `addresses` is an empty array

+ Parameters
    + postcode: `SW1A1AA` (required, string) - Whitespace in postcodes is ignored, so format may be `SW1A1AA` or `SW1A 1AA`

### Postcode search: Result found [GET]

+ Response 200 (application/json)

    + Attributes
        + `polling_station_known`: `true` (boolean) - Do we know where this user should vote?
        + `postcode_location` (object, fixed-type, nullable) - A [GeoJSON Feature](https://tools.ietf.org/html/rfc7946#section-3.2) containing a [Point object](https://tools.ietf.org/html/rfc7946#section-3.1.2) describing the centroid of the input postcode. If providing a map or directions for a polling station journey, use this as the start point. This may be `null` if we are not able to accurately geocode.
            + type: `Feature` (string)
            + properties: (object, nullable)
            + geometry (object, fixed-type) - A GeoJSON Point object describing the centroid of the input postcode
                + type: `Point` (string)
                + coordinates: (array[number], fixed-type)
                    + `-0.2770293269230769` (number)
                    + `50.83664266538461` (number)
        + `custom_finder`: (string, nullable) - If we don't know a user's polling station, sometimes we can provide the URL of another polling station finder. This will always be populated for users in Northern Ireland where Electoral Office for Northern Ireland run their own service.
        + addresses (array[object], fixed-type) - An array of address objects containing the addresses applicable to this request (if necessary)
        + `polling_station` (GeoPollingStation, nullable) - A GeoJSON polling station feature
        + council (Council, nullable) - A Council object describing the local authority which covers this postcode. If we do not know the user's polling station, this can be used to provide contact info for their local council.
        + `report_problem_url`: `https://wheredoivote.co.uk/report_problem/?source=api&source_url=%2Fapi%2Fbeta%2FTEST.json` (string, nullable) - If we provide a polling station result, this URL may be used to provide a user with a back-channel to report inaccurate data.
        + metadata: (object, nullable) - This field may be used to supply additional information about an election.
        + ballots: (array[Ballot], fixed-type) - An array of ballot objects listing the elections applicable to this request

+ Response 400 (application/json)

        { "detail": "Could not geocode from any source" }


## Postcode search: Address picker [/postcode/{postcode}.json]

When we hold data for this area but voters with this postcode don't all vote at the same polling station,
the following conditions can be observed in the response body:
* `polling_station_known` is `false`
* `polling_station` is `null`
* `addresses` is an array of address objects covered by the input postcode.
    This can be used to request the user's address and make a second API call to the `/address` endpoint.

+ Parameters
    + postcode: `SW1A1AA` (required, string) - Whitespace in postcodes is ignored, so format may be `SW1A1AA` or `SW1A 1AA`

### Postcode search: Address picker [GET]

+ Response 200 (application/json)

    + Attributes
        + `polling_station_known`: `false` (boolean) - Do we know where this user should vote?
        + `postcode_location` (object, fixed-type, nullable) - A [GeoJSON Feature](https://tools.ietf.org/html/rfc7946#section-3.2) containing a [Point object](https://tools.ietf.org/html/rfc7946#section-3.1.2) describing the centroid of the input postcode. If providing a map or directions for a polling station journey, use this as the start point. This may be `null` if we are not able to accurately geocode.
            + type: `Feature` (string)
            + properties: (object, nullable)
            + geometry (object, fixed-type) - A GeoJSON Point object describing the centroid of the input postcode
                + type: `Point` (string)
                + coordinates: (array[number], fixed-type)
                    + `-0.26353977212676555` (number)
                    + `50.84477241345472` (number)
        + `custom_finder`: (string, nullable) - If we don't know a user's polling station, sometimes we can provide the URL of another polling station finder. This will always be populated for users in Northern Ireland where Electoral Office for Northern Ireland run their own service.
        + addresses (array[object], fixed-type) - An array of address objects containing the addresses applicable to this request (if necessary)
            + (object)
                + url: `https://wheredoivote.co.uk/api/beta/address/60017557/` (string) - Call this URL to get data for this registered address
                + `polling_station_id`: `527` (string)
                + postcode: `BN436HW` (string)
                + address: `4 Truleigh Way, Shoreham-by-Sea, West Sussex` (string)
                + uprn: `60017559` (string)
                + council: `https://wheredoivote.co.uk/api/beta/councils/E07000223/` (string)
            + (object)
                + url: `https://wheredoivote.co.uk/api/beta/address/60017557?` (string) - Call this URL to get data for this registered address
                + `polling_station_id`: `524` (string)
                + postcode: `BN436HW` (string)
                + address: `2 Truleigh Way, Shoreham-by-Sea, West Sussex` (string)
                + uprn: `60017557` (string)
                + council: `https://wheredoivote.co.uk/api/beta/councils/E07000223/` (string)
        + `polling_station` (object, nullable) - A GeoJSON polling station feature
        + council (Council, nullable) - A Council object describing the local authority which covers this postcode. If we do not know the user's polling station, this can be used to provide contact info for their local council.
        + `report_problem_url`: (string, nullable) - If we provide a polling station result, this URL may be used to provide a user with a back-channel to report inaccurate data.
        + metadata: (object, nullable) - This field may be used to supply additional information about an election.
        + ballots: (array[Ballot], fixed-type) - An array of ballot objects listing the elections applicable to this request

+ Response 400 (application/json)

        { "detail": "Could not geocode from any source" }


## Postcode search: Result not Found [/postcode/{postcode}.json]

When we do not hold data for the area described by the postcode provided,
the following conditions can be observed in the response body:
* `polling_station_known` is `false`
* `polling_station` is `null`
* `addresses` is an empty array

+ Parameters
    + postcode: `SW1A1AA` (required, string) - Whitespace in postcodes is ignored, so format may be `SW1A1AA` or `SW1A 1AA`

### Postcode search: Result not Found [GET]

+ Response 200 (application/json)

    + Attributes
        + `polling_station_known`: `false` (boolean) - Do we know where this user should vote?
        + `postcode_location` (object, fixed-type, nullable) - A [GeoJSON Feature](https://tools.ietf.org/html/rfc7946#section-3.2) containing a [Point object](https://tools.ietf.org/html/rfc7946#section-3.1.2) describing the centroid of the input postcode. If providing a map or directions for a polling station journey, use this as the start point. This may be `null` if we are not able to accurately geocode.
            + type: `Feature` (string)
            + properties: (object, nullable)
            + geometry (object, fixed-type) - A GeoJSON Point object describing the centroid of the input postcode
                + type: `Point` (string)
                + coordinates: (array[number], fixed-type)
                    + `-0.2770293269230769` (number)
                    + `50.83664266538461` (number)
        + `custom_finder`: (string, nullable) - If we don't know a user's polling station, sometimes we can provide the URL of another polling station finder. This will always be populated for users in Northern Ireland where Electoral Office for Northern Ireland run their own service.
        + addresses (array[object], fixed-type) - An array of address objects containing the addresses applicable to this request (if necessary)
        + `polling_station` (object, nullable) - A GeoJSON polling station feature
        + council (Council, nullable) - A Council object describing the local authority which covers this postcode. If we do not know the user's polling station, this can be used to provide contact info for their local council.
        + `report_problem_url`: (string, nullable) - If we provide a polling station result, this URL may be used to provide a user with a back-channel to report inaccurate data.
        + metadata: (object, nullable) - This field may be used to supply additional information about an election.
        + ballots: (array[Ballot], fixed-type) - An array of ballot objects listing the elections applicable to this request

+ Response 400 (application/json)

        { "detail": "Could not geocode from any source" }


## Address search [/address/{uprn}.json]

In the event that the addresses described by a postcode are not all assigned to the same polling station,
an array of address objects will be returned, each of which corresponds to a call to the `/address` endpoint.

When we make a valid call to the `/address` endpoint,
the following conditions can be observed in the response body:
* `polling_station_known` is `true`
* `polling_station` is a GeoJSON [polling station feature](#polling-stations-geojson-3)
* `addresses` is an array of length one containing a single address object describing the requested address

+ Parameters
    + uprn: `60017559` (required, string) - A unique uprn describing a residential address

### Address search [GET]

+ Response 200 (application/json)

    + Attributes
        + `polling_station_known`: `true` (boolean) - Do we know where this user should vote?
        + `postcode_location` (object, fixed-type, nullable) - A [GeoJSON Feature](https://tools.ietf.org/html/rfc7946#section-3.2) containing a [Point object](https://tools.ietf.org/html/rfc7946#section-3.1.2) describing the centroid of the input postcode. If providing a map or directions for a polling station journey, use this as the start point. This may be `null` if we are not able to accurately geocode.
            + type: `Feature` (string)
            + properties: (object, nullable)
            + geometry (object, fixed-type) - A GeoJSON Point object describing the centroid of the input postcode
                + type: `Point` (string)
                + coordinates: (array[number], fixed-type)
                    + `-0.26353977212676555` (number)
                    + `50.84477241345472` (number)
        + `custom_finder`: (string, nullable) - If we don't know a user's polling station, sometimes we can provide the URL of another polling station finder. This will always be populated for users in Northern Ireland where Electoral Office for Northern Ireland run their own service.
        + addresses (array[object], fixed-type) - An array of address objects containing the addresses applicable to this request (if necessary)
            + (object)
                + url: `https://wheredoivote.co.uk/api/beta/address/60017559/` (string) - Call this URL to get data for this registered address
                + `polling_station_id`: `527` (string)
                + postcode: `BN436HW` (string)
                + address: `4 Truleigh Way, Shoreham-by-Sea, West Sussex` (string)
                + uprn: `60017559` (string)
                + council: `https://wheredoivote.co.uk/api/beta/councils/E07000223/` (string)
        + `polling_station` (GeoPollingStation, nullable) - A GeoJSON polling station feature
        + council (Council, nullable) - A Council object describing the local authority which covers this postcode. If we do not know the user's polling station, this can be used to provide contact info for their local council.
        + `report_problem_url`: `https://wheredoivote.co.uk/report_problem/?source=api&source_url=%2Fapi%2Fbeta%2FTEST.json` (string, nullable) - If we provide a polling station result, this URL may be used to provide a user with a back-channel to report inaccurate data.
        + metadata: (object, nullable) - This field may be used to supply additional information about an election.
        + ballots: (array[Ballot], fixed-type) - An array of ballot objects listing the elections applicable to this request

+ Response 404 (application/json)

        { "detail": "Address not found" }

## Group Northern Ireland

WhereDoIVote will not hold any polling station data for Northern Ireland in 2019.

If we don't know a user's polling station, sometimes we may provide an
external link for more info in the `custom_finder` key. This will always
be populated for users in Northern Ireland where the
Electoral Office for Northern Ireland run their own service. e.g:

<pre><code>{
...
  "custom_finder": "http://www.eoni.org.uk/Offices/Postcode-Search-Results?postcode=BT28%202EY"
}
</code></pre>

### ID Requirements

All voters in Northern Ireland must present photo ID to vote at a polling station.

This information will be provided in all responses from the
`/address` and `/postcode` API endpoints,
even if we are not able to provide a polling station result.
